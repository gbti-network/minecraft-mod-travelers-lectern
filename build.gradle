plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"travelerslectern" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	// Testing dependencies
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
	testImplementation 'org.mockito:mockito-core:5.8.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.8.0'
	
	// Log4j dependencies for testing
	testImplementation 'org.apache.logging.log4j:log4j-core:2.20.0'
	testImplementation 'org.apache.logging.log4j:log4j-api:2.20.0'
	
	// Make Minecraft classes available in tests
	testImplementation sourceSets.main.output
	testImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	testImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	// Add test configuration
	configurations {
		testImplementation.extendsFrom modImplementation
	}
}

test {
    useJUnitPlatform()
    
    // Configure test logging
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams = true
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

tasks.named('remapJar') {
    archiveFileName = "${project.archives_base_name}.jar"
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archives_base_name}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
	}
}